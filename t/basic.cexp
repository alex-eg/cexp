(include "stdio.h")

(typedef i32 int
         u32 unsigned int
         f32 float)

(fn foo i32 ((a i32) (b i32))
  (return + a b))

(struct point
  x f32
  y f32)

(struct line
  start point
  end point)

(fn add-points point ((a (ptr point)) (b (ptr point)))
  (var ret point)
  (set (field ret x) (+ (field a x) (field b x))
       (field ret y) (+ (field a y) (field b y)))
  (return ret))

(fn alloc-points (ptr point) ((n u32))
  (return (malloc (* n (sizeof point)))))

(fn free-and-null void ((p (ptr (ptr point))))
  (free (deref p))
  (set (deref p) null))

(fn test void ()
  (var p (ptr point) (alloc-points 1))
  (free-and-null (addr p))
  (assert (= p null)))

(fn test-switch void ((n int))
  (switch n
    0
    ((printf "n is 0~n")
     (break))
    123
    ((printf "n is 123~n")
     (break))
    default
    ((printf "n is something other:%d~n" n)
     (break))))

(fn test-goto void ((n int))
  (label here)
  (set n (- n 1))
  (if (<= n 0)
    (goto end)
    (goto here))
  (label end))

(fn test-for void ((n int))
  (for (int i 0)
       (< i n)))

(fn main i32 ()
  (test)
  (test-switch 123)
  (test-switch 0)
  (test-switch -1)
  (test-goto)
  (printf "Hello world! %d %d~n" 1 2)
  (return 0))
